{"version":3,"sources":["webpack:///./node_modules/crypt/crypt.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/core-js/modules/es.regexp.to-string.js","webpack:///./src/mock/zfjs-mock-pc.js","webpack:///./node_modules/sha1/sha1.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/charenc/charenc.js","webpack:///./node_modules/core-js/internals/regexp-flags.js","webpack:///./node_modules/buffer/index.js","webpack:///./node_modules/isarray/index.js"],"names":["base64map","crypt","rotl","n","b","rotr","endian","constructor","Number","i","length","randomBytes","bytes","push","Math","floor","random","bytesToWords","words","wordsToBytes","bytesToHex","hex","toString","join","hexToBytes","c","parseInt","substr","bytesToBase64","base64","triplet","j","charAt","base64ToBytes","replace","imod4","indexOf","pow","module","exports","byteLength","toByteArray","fromByteArray","lookup","revLookup","Arr","Uint8Array","Array","code","len","charCodeAt","getLens","b64","Error","validLen","placeHoldersLen","lens","_byteLength","tmp","arr","curByte","tripletToBase64","num","encodeChunk","uint8","start","end","output","extraBytes","parts","maxChunkLength","len2","redefine","anObject","fails","flags","TO_STRING","RegExpPrototype","RegExp","prototype","nativeToString","NOT_GENERIC","call","source","INCORRECT_NAME","name","R","this","p","String","rf","f","undefined","unsafe","_dgtVerifyRandomStr","window","__zf","_sendMessage","msgStr","msg","JSON","parse","realMsg","jsonMessage","ret","msgType","callbackId","SHA1","shaKey","params","errCode","apiName","document","title","history","back","close","localStorage","setItem","key","value","getItem","enableCount","result","index","nativeResourceUrl","size","nativeResourceUrls","serverResourceUrl","videoTime","address","latitude","longitude","retStr","btoa","stringify","zfJSBridge","_handleMessageFromZF","utf8","bin","sha1","message","stringToBytes","Buffer","isBuffer","slice","isArray","m","l","w","H0","H1","H2","H3","H4","a","d","e","t","api","options","digestbytes","asBytes","asString","bytesToString","_blocksize","_digestsize","read","buffer","offset","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","s","NaN","Infinity","write","rt","abs","isNaN","log","LN2","charenc","str","unescape","encodeURIComponent","decodeURIComponent","escape","fromCharCode","that","global","ignoreCase","multiline","dotAll","unicode","sticky","ieee754","typedArraySupport","__proto__","foo","subarray","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","RangeError","arg","encodingOrOffset","allocUnsafe","from","TypeError","ArrayBuffer","fromArrayBuffer","fromString","fromObject","assertSize","alloc","fill","encoding","checked","string","isEncoding","actual","fromArrayLike","array","byteOffset","obj","copy","isnan","type","data","SlowBuffer","isView","loweredCase","utf8ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","val","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","buf","readUInt16BE","foundIndex","found","hexWrite","remaining","strLen","parsed","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","decodeCodePointsArray","INSPECT_MAX_BYTES","poolSize","_augment","Symbol","species","Object","defineProperty","configurable","allocUnsafeSlow","_isBuffer","compare","x","y","concat","list","pos","swap16","swap32","swap64","arguments","apply","equals","inspect","max","match","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","MAX_ARGUMENTS_LENGTH","codePoints","out","toHex","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","INVALID_BASE64_RE","base64clean","stringtrim","trim","units","leadSurrogate","byteArray","hi","lo","src","dst"],"mappings":"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","file":"js/chunk-13766879.5dcb9fe0.js","sourcesContent":["(function() {\n  var base64map\n      = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n\n  crypt = {\n    // Bit-wise rotation left\n    rotl: function(n, b) {\n      return (n << b) | (n >>> (32 - b));\n    },\n\n    // Bit-wise rotation right\n    rotr: function(n, b) {\n      return (n << (32 - b)) | (n >>> b);\n    },\n\n    // Swap big-endian to little-endian and vice versa\n    endian: function(n) {\n      // If number given, swap endian\n      if (n.constructor == Number) {\n        return crypt.rotl(n, 8) & 0x00FF00FF | crypt.rotl(n, 24) & 0xFF00FF00;\n      }\n\n      // Else, assume array and swap all items\n      for (var i = 0; i < n.length; i++)\n        n[i] = crypt.endian(n[i]);\n      return n;\n    },\n\n    // Generate an array of any length of random bytes\n    randomBytes: function(n) {\n      for (var bytes = []; n > 0; n--)\n        bytes.push(Math.floor(Math.random() * 256));\n      return bytes;\n    },\n\n    // Convert a byte array to big-endian 32-bit words\n    bytesToWords: function(bytes) {\n      for (var words = [], i = 0, b = 0; i < bytes.length; i++, b += 8)\n        words[b >>> 5] |= bytes[i] << (24 - b % 32);\n      return words;\n    },\n\n    // Convert big-endian 32-bit words to a byte array\n    wordsToBytes: function(words) {\n      for (var bytes = [], b = 0; b < words.length * 32; b += 8)\n        bytes.push((words[b >>> 5] >>> (24 - b % 32)) & 0xFF);\n      return bytes;\n    },\n\n    // Convert a byte array to a hex string\n    bytesToHex: function(bytes) {\n      for (var hex = [], i = 0; i < bytes.length; i++) {\n        hex.push((bytes[i] >>> 4).toString(16));\n        hex.push((bytes[i] & 0xF).toString(16));\n      }\n      return hex.join('');\n    },\n\n    // Convert a hex string to a byte array\n    hexToBytes: function(hex) {\n      for (var bytes = [], c = 0; c < hex.length; c += 2)\n        bytes.push(parseInt(hex.substr(c, 2), 16));\n      return bytes;\n    },\n\n    // Convert a byte array to a base-64 string\n    bytesToBase64: function(bytes) {\n      for (var base64 = [], i = 0; i < bytes.length; i += 3) {\n        var triplet = (bytes[i] << 16) | (bytes[i + 1] << 8) | bytes[i + 2];\n        for (var j = 0; j < 4; j++)\n          if (i * 8 + j * 6 <= bytes.length * 8)\n            base64.push(base64map.charAt((triplet >>> 6 * (3 - j)) & 0x3F));\n          else\n            base64.push('=');\n      }\n      return base64.join('');\n    },\n\n    // Convert a base-64 string to a byte array\n    base64ToBytes: function(base64) {\n      // Remove non-base-64 characters\n      base64 = base64.replace(/[^A-Z0-9+\\/]/ig, '');\n\n      for (var bytes = [], i = 0, imod4 = 0; i < base64.length;\n          imod4 = ++i % 4) {\n        if (imod4 == 0) continue;\n        bytes.push(((base64map.indexOf(base64.charAt(i - 1))\n            & (Math.pow(2, -2 * imod4 + 8) - 1)) << (imod4 * 2))\n            | (base64map.indexOf(base64.charAt(i)) >>> (6 - imod4 * 2)));\n      }\n      return bytes;\n    }\n  };\n\n  module.exports = crypt;\n})();\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","'use strict';\nvar redefine = require('../internals/redefine');\nvar anObject = require('../internals/an-object');\nvar fails = require('../internals/fails');\nvar flags = require('../internals/regexp-flags');\n\nvar TO_STRING = 'toString';\nvar RegExpPrototype = RegExp.prototype;\nvar nativeToString = RegExpPrototype[TO_STRING];\n\nvar NOT_GENERIC = fails(function () { return nativeToString.call({ source: 'a', flags: 'b' }) != '/a/b'; });\n// FF44- RegExp#toString has a wrong name\nvar INCORRECT_NAME = nativeToString.name != TO_STRING;\n\n// `RegExp.prototype.toString` method\n// https://tc39.github.io/ecma262/#sec-regexp.prototype.tostring\nif (NOT_GENERIC || INCORRECT_NAME) {\n  redefine(RegExp.prototype, TO_STRING, function toString() {\n    var R = anObject(this);\n    var p = String(R.source);\n    var rf = R.flags;\n    var f = String(rf === undefined && R instanceof RegExp && !('flags' in RegExpPrototype) ? flags.call(R) : rf);\n    return '/' + p + '/' + f;\n  }, { unsafe: true });\n}\n","import SHA1 from 'sha1'\r\n\r\nvar _dgtVerifyRandomStr = \"${_dgtVerifyRandomStr}\"\r\n\r\nwindow.__zf = window.__zf || (function () {\r\n    return {\r\n        _sendMessage: function (msgStr) {\r\n            var msg = JSON.parse(msgStr)\r\n            var realMsg = JSON.parse(msg.jsonMessage)\r\n\r\n            var ret = {\r\n                msgType: \"callback\",\r\n                callbackId: realMsg.callbackId\r\n            }\r\n\r\n            if (SHA1(msg.jsonMessage + _dgtVerifyRandomStr).toString() != msg.shaKey) {\r\n                ret.params = {\r\n                    errCode: \"99999999\"\r\n                }\r\n            } else {\r\n                switch (realMsg.apiName) {\r\n                    case \"config\":\r\n                        ret.params = {\r\n                            errCode: 0\r\n                        }\r\n                        break\r\n                    case \"setTitle\":\r\n                        document.title = realMsg.params.title\r\n                        ret.params = {\r\n                            errCode: 0\r\n                        }\r\n                        break\r\n                    case \"backCloseWindow\":\r\n                        history.back()\r\n                        ret.params = {\r\n                            errCode: 0\r\n                        }\r\n                        break\r\n                    case \"closeWindow\":\r\n                        window.close()\r\n                        ret.params = {\r\n                            errCode: 0\r\n                        }\r\n                        break\r\n                    case \"putLocalStorageKV\":\r\n                        localStorage.setItem(realMsg.params.key, realMsg.params.value)\r\n                        ret.params = {\r\n                            errCode: 0\r\n                        }\r\n                        break\r\n                    case \"getLocalStorageKV\":\r\n                        ret.params = {\r\n                            errCode: 0,\r\n                            value: localStorage.getItem(realMsg.params.key)\r\n                        }\r\n                        break\r\n\r\n                    case \"choosePhotos\":\r\n                        if (realMsg.params.enableCount > 0) {\r\n                            ret.params = {\r\n                                errCode: 0,\r\n                                result: []\r\n                            }\r\n                            for (let index = 0; index < 5; index++) {\r\n                                ret.params.result.push({\r\n                                    nativeResourceUrl: \"assets/logo.png\",\r\n                                    name: \"logo.png\",\r\n                                    size: \"123\"\r\n                                })\r\n                            }\r\n                        } else {\r\n                            ret.params = {\r\n                                errCode: 1\r\n                            }\r\n                        }\r\n                        break\r\n                    case \"uploadPhotos\":\r\n                        ret.params = {\r\n                            errCode: 0,\r\n                            result: []\r\n                        }\r\n                        for (const key in realMsg.params.nativeResourceUrls) {\r\n                            ret.params.result.push({\r\n                                nativeResourceUrl: realMsg.params.nativeResourceUrls[key],\r\n                                serverResourceUrl: realMsg.params.nativeResourceUrls[key]\r\n                            })\r\n                        }\r\n                        break\r\n                    case \"previewPhotos\":\r\n                        ret.params = {\r\n                            errCode: 0,\r\n                        }\r\n                        break\r\n\r\n                    case \"chooseVideos\":\r\n                        if (realMsg.params.enableCount > 0) {\r\n                            ret.params = {\r\n                                errCode: 0,\r\n                                result: []\r\n                            }\r\n                            for (let index = 0; index < 5; index++) {\r\n                                ret.params.result.push({\r\n                                    nativeResourceUrl: \"assets/logo.png\",\r\n                                    name: \"logo.png\",\r\n                                    size: 123,\r\n                                    videoTime: 123\r\n                                })\r\n                            }\r\n                        } else {\r\n                            ret.params = {\r\n                                errCode: 1\r\n                            }\r\n                        }\r\n                        break\r\n                    case \"uploadVideos\":\r\n                        ret.params = {\r\n                            errCode: 0,\r\n                            result: []\r\n                        }\r\n                        for (const key in realMsg.params.nativeResourceUrls) {\r\n                            ret.params.result.push({\r\n                                nativeResourceUrl: realMsg.params.nativeResourceUrls[key],\r\n                                serverResourceUrl: realMsg.params.nativeResourceUrls[key]\r\n                            })\r\n                        }\r\n                        break\r\n                    case \"previewVideo\":\r\n                        ret.params = {\r\n                            errCode: 0,\r\n                        }\r\n                        break\r\n\r\n                    case \"chooseFile\":\r\n                        if (realMsg.params.enableCount > 0) {\r\n                            ret.params = {\r\n                                errCode: 0,\r\n                                result: []\r\n                            }\r\n                            for (let index = 0; index < 5; index++) {\r\n                                ret.params.result.push({\r\n                                    nativeResourceUrl: \"assets/logo.png\",\r\n                                    name: \"logo.png\",\r\n                                    size: \"123\"\r\n                                })\r\n                            }\r\n                        } else {\r\n                            ret.params = {\r\n                                errCode: 1\r\n                            }\r\n                        }\r\n                        break\r\n                    case \"uploadFile\":\r\n                        ret.params = {\r\n                            errCode: 0,\r\n                            result: []\r\n                        }\r\n                        for (const key in realMsg.params.nativeResourceUrls) {\r\n                            ret.params.result.push({\r\n                                nativeResourceUrl: realMsg.params.nativeResourceUrls[key],\r\n                                serverResourceUrl: realMsg.params.nativeResourceUrls[key]\r\n                            })\r\n                        }\r\n                        break\r\n                    case \"previewFile\":\r\n                        ret.params = {\r\n                            errCode: 0,\r\n                        }\r\n                        break\r\n\r\n                    case \"chooseLocation\":\r\n                        ret.params = {\r\n                            errCode: 0,\r\n                            address: \"深圳\",\r\n                            latitude: 0,\r\n                            longitude: 0\r\n                        }\r\n                        break\r\n                    case \"getLocation\":\r\n                        ret.params = {\r\n                            errCode: 0,\r\n                            address: \"深圳\",\r\n                            latitude: 0,\r\n                            longitude: 0\r\n                        }\r\n                        break\r\n                    case \"previewLocation\":\r\n                        ret.params = {\r\n                            errCode: 0,\r\n                        }\r\n                        break\r\n                }\r\n\r\n            }\r\n\r\n            var retStr = window.btoa(JSON.stringify(ret))\r\n\r\n            window.zfJSBridge._handleMessageFromZF(JSON.stringify({\r\n                jsonMessage: retStr,\r\n                shaKey: SHA1(retStr + _dgtVerifyRandomStr).toString()\r\n            }))\r\n        }\r\n    }\r\n})()","(function() {\n  var crypt = require('crypt'),\n      utf8 = require('charenc').utf8,\n      bin = require('charenc').bin,\n\n  // The core\n  sha1 = function (message) {\n    // Convert to byte array\n    if (message.constructor == String)\n      message = utf8.stringToBytes(message);\n    else if (typeof Buffer !== 'undefined' && typeof Buffer.isBuffer == 'function' && Buffer.isBuffer(message))\n      message = Array.prototype.slice.call(message, 0);\n    else if (!Array.isArray(message))\n      message = message.toString();\n\n    // otherwise assume byte array\n\n    var m  = crypt.bytesToWords(message),\n        l  = message.length * 8,\n        w  = [],\n        H0 =  1732584193,\n        H1 = -271733879,\n        H2 = -1732584194,\n        H3 =  271733878,\n        H4 = -1009589776;\n\n    // Padding\n    m[l >> 5] |= 0x80 << (24 - l % 32);\n    m[((l + 64 >>> 9) << 4) + 15] = l;\n\n    for (var i = 0; i < m.length; i += 16) {\n      var a = H0,\n          b = H1,\n          c = H2,\n          d = H3,\n          e = H4;\n\n      for (var j = 0; j < 80; j++) {\n\n        if (j < 16)\n          w[j] = m[i + j];\n        else {\n          var n = w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16];\n          w[j] = (n << 1) | (n >>> 31);\n        }\n\n        var t = ((H0 << 5) | (H0 >>> 27)) + H4 + (w[j] >>> 0) + (\n                j < 20 ? (H1 & H2 | ~H1 & H3) + 1518500249 :\n                j < 40 ? (H1 ^ H2 ^ H3) + 1859775393 :\n                j < 60 ? (H1 & H2 | H1 & H3 | H2 & H3) - 1894007588 :\n                         (H1 ^ H2 ^ H3) - 899497514);\n\n        H4 = H3;\n        H3 = H2;\n        H2 = (H1 << 30) | (H1 >>> 2);\n        H1 = H0;\n        H0 = t;\n      }\n\n      H0 += a;\n      H1 += b;\n      H2 += c;\n      H3 += d;\n      H4 += e;\n    }\n\n    return [H0, H1, H2, H3, H4];\n  },\n\n  // Public API\n  api = function (message, options) {\n    var digestbytes = crypt.wordsToBytes(sha1(message));\n    return options && options.asBytes ? digestbytes :\n        options && options.asString ? bin.bytesToString(digestbytes) :\n        crypt.bytesToHex(digestbytes);\n  };\n\n  api._blocksize = 16;\n  api._digestsize = 20;\n\n  module.exports = api;\n})();\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var charenc = {\n  // UTF-8 encoding\n  utf8: {\n    // Convert a string to a byte array\n    stringToBytes: function(str) {\n      return charenc.bin.stringToBytes(unescape(encodeURIComponent(str)));\n    },\n\n    // Convert a byte array to a string\n    bytesToString: function(bytes) {\n      return decodeURIComponent(escape(charenc.bin.bytesToString(bytes)));\n    }\n  },\n\n  // Binary encoding\n  bin: {\n    // Convert a string to a byte array\n    stringToBytes: function(str) {\n      for (var bytes = [], i = 0; i < str.length; i++)\n        bytes.push(str.charCodeAt(i) & 0xFF);\n      return bytes;\n    },\n\n    // Convert a byte array to a string\n    bytesToString: function(bytes) {\n      for (var str = [], i = 0; i < bytes.length; i++)\n        str.push(String.fromCharCode(bytes[i]));\n      return str.join('');\n    }\n  }\n};\n\nmodule.exports = charenc;\n","'use strict';\nvar anObject = require('../internals/an-object');\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.github.io/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n"],"sourceRoot":""}